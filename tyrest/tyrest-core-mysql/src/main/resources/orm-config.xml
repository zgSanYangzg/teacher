<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://activemq.apache.org/schema/core 
		http://activemq.apache.org/schema/core/activemq-core.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="org.tyrest.*.face.orm.entity" />
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"></bean>
	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true" />
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
	</bean>

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>


	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<property name="minIdle" value="1"></property>
		<property name="maxWait" value="30000"></property>
		<property name="timeBetweenEvictionRunsMillis" value="60000"></property>
		<property name="minEvictableIdleTimeMillis" value="300000"></property>
		<property name="validationQuery" value="SELECT 1 "></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="poolPreparedStatements" value="true"></property>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20"></property>
		<property name="filters" value="stat,slf4j" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="log-filter" />
			</list>
		</property>
	</bean>

	<jpa:repositories base-package="org.tyrest.*.dao" />

	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
		<property name="resultSetLogEnabled" value="true" />
		<property name="statementExecutableSqlLogEnable" value="true" />
	</bean>

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="30000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="find*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="query*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="get*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="read*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="count*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="list*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="check*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="verify*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="search*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="is*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="lock*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="record*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="upsert*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="touch*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="apply*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="execute*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="merge*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="put*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="sync*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="copy*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="change*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="Adjust*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="start*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="init*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="upload*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="batch*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="has*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="publish*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="disable*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="import*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="submit*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="complete*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="process*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="send*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="hide*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="top*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="ban*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="public*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="reset*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="bind*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
			<tx:method name="signIn*" propagation="REQUIRED" rollback-for="Exception,RuntimeException"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* org.tyrest..*ServiceImpl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="txAdvice" />
	</aop:config>

</beans>